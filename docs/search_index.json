[["index.html", "Single-Cell Bioinformatics: From Technology to Analysis Methodologies Preferance", " Single-Cell Bioinformatics: From Technology to Analysis Methodologies rem B. GÜNDÜZ 2022-01-01 Preferance "],["why-single-cell-analysis.html", "Chapter 1 Why Single-Cell Analysis?", " Chapter 1 Why Single-Cell Analysis? Single-cell sequencing was selected as the method of the year in 2013 by Nature. (2014) Ever since then, besides of the methodology and the algorithms, the popularity of the single-cell sequencing improved. However, why do we need to use a sequencing method focused on a single cell when we can have bulk sequencing data? FIGURE 1.1: 10X Genomics Molecular Profiling of Single-Cell vs Bulk Sequencing (2019) The short answer is the limitations of bulk sequencing. If you want to analyze the immune response profiles of different patients using blood samples, using bulk sequencing data may not be beneficial. Blood is a complex mixture of various cell types. The bulk sequencing averages all cells within the sample. As a result, the data you have will be the average expression profile of all cells in the sample. Single-cell sequencing technology allows profiling different cells in samples. In Table 1, the comparison between bulk and single-cell sequencing was given. TABLE 1.1: Properties of Bulk vs Single-Cell Sequencing Bulk Sequencing Single-Cell Sequencing Average gene expression from all cells Each cell acts as a unique sample Average might not be representative Rare cell types can be lost Cellular heterogeneity is masked Resolves cellular heterogeneity Data is dense Data can be sparse and noisy Is a more robost technology Increases statistical power Cell aggregates Can be costly References "],["single-cell-rna-seq-technologies.html", "Chapter 2 Single-Cell RNA-seq Technologies 2.1 Plate-Based SMART-seq 2.2 MARS-seq 2.3 Droplet Microfluidics (DROP-seq) 2.4 10X Genomics Chromium 2.5 Nanowell Platforms 2.6 Sample Indexing (Illumina) 2.7 Single-cell Combinatorial Indexing: sciRNA-seq", " Chapter 2 Single-Cell RNA-seq Technologies FIGURE 2.1: Explosion of scRNA-seq Throughput (2018) Technological advances increase the efficiency of single-cell sequencing methods while the cost decreases day by day. In this chapter, we will briefly go through some of the single-cell RNA-seq technologies. 2.1 Plate-Based SMART-seq 2.2 MARS-seq 2.3 Droplet Microfluidics (DROP-seq) FIGURE 2.2: Extraction and Processing of Single-Cell Transcriptomes by Drop-Seq (2015) DROP-seq enables high throughput profiling of thousands of individual cells in a short period of time by encapsulating each cell individually with a unique barcode in a droplet. The process takes place within a microfluidic device. FIGURE 2.3: Drop-Seq barcoding scheme After dissociating the complex tissue sample into individual cells, each cell is suspended in droplets with microparticle beads which deliver barcoded primers within a microfluidic device. When cells within the droplet are lysed, the mRNA of these cells is attached to microparticles.A set of beads are generated with the reverse transcription of mRNAs into cDNAs. These sets of beads are called STAMPs, single-cell transcriptomes attached to microparticles. Finally, an RNA-seq library with about 10,000 single-cell transcriptomes was constructed by barcode STAMPs amplifying. FIGURE 2.4: Sequence of primers on the microparticle Each barcoded primer bead contains an unique cell barcode and, an unique molecular identifiers (UMI)s along with the common PCR handle. The common PCR handle sequences used for PCR amplification after STAMPs formation. The cell barcodes are unique for each droplets, therefore, each microparticles contains primers with the same cell barcode. UMIs are unique barcodes to each transcript, UMIs are counted digitially to count unique number of mRNA transcripts. And, counting UMIs also removes the uncertainty of PCR duplicates from transcript copy numbers. Limitations of DROP-seq: Most of the droplets are empty and, very few of the droplets contains both a cell and microparticle. Thus, it is not an efficient method. 2.4 10X Genomics Chromium FIGURE 2.5: 10x Genomics Chromium scheme (2017) The 10X Genomics method is very similar to DROP-seq and, it is first described in (2017). First, the barcoded beads are mixed with the cell suspension. Then, the mixture is capsulated with the emulsion generated by oil. The microfluidic device and the barcoded beads of the 10X Genomics are engineered to increase the efficiency of barcoding cells. Therefore almost 90% of the droplets contain a cell and a barcoded bead. The main difference between the 10X Genomics Chromium and DROP-seq is the reverse transcription occurs within the droplets. After the amplification process, the transcriptomics library is constructed. For each lanes of a 10X Genomics Chromium chip, approximately 20,000 cells can be barcoded and sequenced simultaneously. Advantages of 10X Genomics Chromium: 10X Genomics is a commercial platform Data obtained is high-throughput Almost 10,000s reads per cell Fast, inexpensive 3 transcript sequencing Single-nucleus sequencing possible Less bias by cell morphology Only captures nuclear RNA 2.5 Nanowell Platforms 2.6 Sample Indexing (Illumina) 2.7 Single-cell Combinatorial Indexing: sciRNA-seq References "],["single-cell-rna-seq-data-processing-and-quality-control.html", "Chapter 3 Single-cell RNA-seq Data Processing and Quality Control 3.1 Cell Ranger Pipeline 3.2 Demultiplexing 3.3 STAR: Ultrafast Universal RNA-seq Aligner 3.4 Transcript Quantification: KALLISTO 3.5 The Single-Cell Data 3.6 Data normalization 3.7 Dealing with Batch Effects 3.8 Data cleanup (filtering) 3.9 Empty Droplets 3.10 Doublet detection and removal: demuxlet 3.11 Doublet detection and removal: DoubletFinder 3.12 Doublet detection and removal: Scrublet 3.13 Issues of the Single-Cell Data 3.14 Data imputation / data smoothing 3.15 MAGIC (Markov affinity-based graph imputation of cells)", " Chapter 3 Single-cell RNA-seq Data Processing and Quality Control Once the raw data is obtained, the first thing to do is to check the quality of the reads and process it accordingly. In this chapter, we will go through quality control and processing methods for single-cell data. 3.1 Cell Ranger Pipeline FIGURE 3.1: Cell Ranger Pipeline (2019) In 10X Genomics workflow, which is the main workflow that is commonly used nowdays, Cell Ranger pipeline is used to process Chromium single-cell data to generating feature-barcode matrices, reading alignment, filtering, clustering and perform other secondary analysis methodologies.@[-10xGenomics2019] Cell Ranger identifies each sample, cell and molecule. Identification done by using sequencing barcodes (eg. Illumina i7 and i5 indices) for samples, cell-specific barcodes for cells and, UMIs for molecules. The typical Cell Ranger results looks like this: FIGURE 3.2: Cell Ranger Pipeline Results (2019) In the previous chapter, we mentioned that some of the droplets may contain no cells. In the qc summary report of the Cell Ranger pipeline, Cell Ranger predicts the number of cells within the inputed data and print the estimation in Estimated Number of Cells section. The Barcode Rank Plot indicates the droplets that contains bead but no cell with the grey color. To determine a cut-off and remove noisy data, bioinformaticians benefit from this plot. The Mapping section of the report indicates percantage of reads that is aligned successfully to the genome. HINT : If the mapping rate is low and, you are working with the pure data (eg. human data) that may indicate contamination. NOTE : Cell Ranger prints error, if there is a quality issue. 3.1.1 FASTQ File Format High-throughput sequencing reads usually outputs FASTQ files. Cell Ranger pipeline produces FASTQ files as well. Lets take a look at the FASTQ file format below. FIGURE 3.3: Structure of a FASTQ file Each FASTQ file contains three parts. The first line of the FASTQ file that starts with @, contains the read identifier, which indicates the position on the flowcell. The DNA sequence starts from the second line. And the line comes before another read identifier contains the per-base sequencing quality score (also called PHRED score). The formula of the PHRED score is given below where P is the Probability of base calling error. FIGURE 3.4: The formula of the PHRED score 3.1.2 Sequencing Quality : FASTQC tool Sequence quality can be determined by FASTQC tool. FASTQC tool provides simple quality control check on raw sequence data that comes from high throughput sequencing pipelines. Anders (2010) FIGURE 3.5: FASTQC Results FASTQC tool provides: Summary statistics (number of reads, ) Sequencing quality summaries Sequence biases Duplicate reads Sequence contamination (adapters, etc.) 3.1.3 Read trimming Sequencing data analysis pipelines modify the read sequences produced by a sequencer. There may be sequence biases due to structural oligonucleotides (adapters, etc.) and low-quality sequences. Trimming at reading ends is done as the first operation in a pipeline to avoid sequence biases. FIGURE 3.6: High-throughput sequencing pipeline scheme There are several softwares present to apply trimming, frequently used ones are: CellRanger cutadapt Trim Galore! SeqPurge trimmomatic 3.2 Demultiplexing FIGURE 3.7: Data processing pipeline workflow. Although the high-throughput sequencing methods provides data with good quality, errors via PCR can be introduced when preparing the library. When working with working with single-cell RNA sequencing data the initial cDNA libraries undergo PCR amplification multiple times. Thus, PCR errors are often introduced when preparing single-cell RNA sequencing library. Demultiplex is a simple sequencing error correction algorithm used to prevent this kind of errors. Zhang et al. (2018) Demultiplexing indicates identification of cell barcodes, assigning cell-barcode to the associated reads and, filtration of cell-barcodes. If the data contains UMIs, UMI codes are mapped to the read name of the gene-body containing read. UMIs are counted for each cell and gene thus, duplicates are avoided. Genes are identified via sequence mapping. And, if the expected cell-barcodes are known, assigned barcodes are filtered accordingly. Demultiplexing is done differently depending on the protocol and the pipeline of choice. In general, the data obtained from paired-end full transcript protocols and, Smart-seq2 are already be demultiplexed. If the data was not demultiplexed, you need to apply it yourself depending on the protocol used to produce raw data. 3.3 STAR: Ultrafast Universal RNA-seq Aligner After trimming and, prof the data has good quality, the data needs to be mapped to the corresponding reference genome. This mapping process is called alignment and, it is necessary if were interested in gene expression analysis (eg. differential gene expression analysis, quantifying etc.) Kallisto and STAR are the most popular alignement tools. Dobin et al. (2013) FIGURE 3.8: STAR workflow.(2017) In summary, STAR searchs for the longest sequence in the data that is also present in the reference genome using an uncompressed suffix array (SA). This process is called seed searching. The longest matching sequences are called the Maximal Mappable Prefixes (MMPs). The MMP side and the unread side are named as different seeds (eg seed1,seed2). After finding MMP, STAR searchs for the next the longest sequence. If an exact matching sequence for each part of the read is not found,the previous MMPs will be extended. And, if extending the previous MMPs oes not give a good alignment, then the poor quality or adapter sequence (or other contaminating sequence) will be soft clipped. These process is repeated for each for unmapped part of the read in forward and reverse directions. Dobin et al. (2013) STAR detects splicing events in this way, because of that,it also called splice aware aligner. Then seeds are clustered by proximity to anchor seeds (or uniquely mapping seeds) and, seeds are stitched together based on alignment score using dynamic programming. The scoring done based on matches, mismatches, insertions, deletions and splice junction gaps. Mistry, M. Freeman, B. Piper (2017) 3.4 Transcript Quantification: KALLISTO FIGURE 3.9: Kallisto workflow.(2016) While STAR is a read-alinger, Kallisto is a pseudo-aligner. That means, while STAR mapp reads to a reference genome, Kallisto mapps k-mers. Kallisto assign reads to transcripts without assigning specific positions for each base. Instead, it uses a Transcriptome de Bruijn Graph (T-DBG). A k-mer is a nucleotide sequence that length k derived from a read. Each transcript act as a path through the graph and, transcriptome reference represented as consecutive k-mers. Kallisto maps reads to splice isoforms rather than genes. Bray et al. (2016) EM-algorithm is used to estimate transcript abundance and optimize compatibility (likelihood). Intersection of vertex compatibility classes indicates compatible transcripts. FIGURE 3.10: The EM algorithm formula. K-mers of reads can be mapped to vertices using their exact matches (also called hashing). Read compatibility is found by matching the read mapping with transcript-induced paths (compatibility classes). It is much more faster than read-aligners. Pseudo-aligners can cope better with sequencing errors. For example, if k is sufficiently large, the error k-mers may not be part of the transcriptome and can be ignored. 3.5 The Single-Cell Data FIGURE 3.11: Representation of the single-cell count data The raw counts of single-cell data are integers. The count matrices are sparse but, high dimensional. Therefore, feature selection and, dimensional reduction methods are necessary. FIGURE 3.12: Representation of the sparse data (2009) If the matrix has zero values for most elements, it can be considered as sparse data. The sparsity can be determined by the Number of Non-Zero (NNZ) ratio of elements. If the NNZ ratio is above 0.5 data can be considered as sparse data. FIGURE 3.13: Representation of the Coordinate Matrix (COO) (2009) To save memory, the sparse data can be stored in a coordinate matrix (COO). Only the non-zero elements stored as vectors and their respective indices in a COO. Thus, more efficient and less biased computation can be done on data. FIGURE 3.14: Compressed Sparse Row (2009) The Compressed Sparse Row (CSR) format is designed for more efficient indexing and computation and, it can be considered as read-only. The data (x) within the CSR consist of non-zero elements, index (i). Length = length of x Column indices of non-zero data FIGURE 3.15: Compressed Sparse Column (2009) Compressed Sparse Column (CSC) works exactly the same as CSR. But, instead of row based index,CSC has column based index pointers. Pointers (p): Length = number of rows + 1 Cumulative number of non-zero elements Differences indicate number of non-zero elements per row 3.6 Data normalization FIGURE 3.16: Single-cell sequencing counts Single-cell sequencing data needs to be normalized to make quantifications comparable across cells and, mitigate cell-specific coverage biases. There are several methods present for normalizing the single-cell sequencing data. Hafemeister and Satija (2019) Within-sample normalization. FIGURE 3.17: Within-sample normalization formulas. Non-linear normalization FIGURE 3.18: Non-linear normalization formulas. Scaling: z-score FIGURE 3.19: Scaling: z-score formula. Scale genes to mean 0 and variance 1 Weight genes equally in downstream analysis Often used for visualization Advanced methods for computing scaling factors DESeq, edgeR: pseudo-reference sample scran: robustness through pooling and deconvolution of cells sctransform: Can incorporate other covariates besides total counts for batch correction Avoid overfitting by regularization of fitted parameters over all genes 3.7 Dealing with Batch Effects FIGURE 3.20: Representation of batch effect and, the ComBat formula. 3.8 Data cleanup (filtering) 3.9 Empty Droplets 3.10 Doublet detection and removal: demuxlet 3.11 Doublet detection and removal: DoubletFinder 3.12 Doublet detection and removal: Scrublet 3.13 Issues of the Single-Cell Data 3.14 Data imputation / data smoothing 3.15 MAGIC (Markov affinity-based graph imputation of cells) References "],["methods-used-in-single-cell.html", "Chapter 4 Methods Used in Single-Cell", " Chapter 4 Methods Used in Single-Cell "],["cell-trajectory-inference.html", "Chapter 5 Cell Trajectory Inference", " Chapter 5 Cell Trajectory Inference "],["differential-regulation-and-pathway-analysis-in-single-cell.html", "Chapter 6 Differential Regulation and Pathway Analysis in Single-Cell", " Chapter 6 Differential Regulation and Pathway Analysis in Single-Cell "],["single-cell-epigenomics.html", "Chapter 7 Single-Cell Epigenomics", " Chapter 7 Single-Cell Epigenomics "],["single-cell-atac-seq.html", "Chapter 8 Single-Cell ATAC-seq", " Chapter 8 Single-Cell ATAC-seq "],["single-cell-data-integration.html", "Chapter 9 Single-Cell Data Integration", " Chapter 9 Single-Cell Data Integration "],["single-cell-multiomics.html", "Chapter 10 Single-Cell Multiomics", " Chapter 10 Single-Cell Multiomics "],["single-cell-spatial-transcriptomics.html", "Chapter 11 Single-Cell Spatial Transcriptomics", " Chapter 11 Single-Cell Spatial Transcriptomics "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
